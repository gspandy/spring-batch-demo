<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
            xmlns:batch="http://www.springframework.org/schema/batch"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/batch
            http://www.springframework.org/schema/batch/spring-batch.xsd">

    <import resource="applicationContext.xml" />

    <!-- Job的配置信息 -->
    <batch:job id="multiTypeSingleFileJob">
        <batch:step id="xmlFileReadAndWriterStep">
            <batch:tasklet>
                <batch:chunk reader="multiTypesItemReader" writer="multiTypesItemWriter" commit-interval="1">
                    <batch:streams>
                        <batch:stream ref="studentWriter" />
                        <batch:stream ref="goodsWriter" />
                    </batch:streams>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <!-- 不同格式数据的文件读取 -->
    <bean id="multiTypesItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="classpath:#{jobParameters['inputFilePath']}" />
        <property name="lineMapper">
            <!-- PatternMatchingCompositeLineMapper支持两种通配符：*和？，前者代表多个字符，后者仅代表一个字符-->
            <bean class="org.springframework.batch.item.file.mapping.PatternMatchingCompositeLineMapper">
                <property name="tokenizers">
                    <map>
                        <entry key="student*" value-ref="studentTokenizer" />
                        <entry key="goods*" value-ref="goodsTokenizer" />
                    </map>
                </property>
                <property name="fieldSetMappers">
                    <map>
                        <entry key="student*" value-ref="studentFieldSetMapper" />
                        <entry key="goods*" value-ref="goodsFieldSetMapper" />
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="studentTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <property name="delimiter" value="," />
        <property name="names">
            <list>
                <value>student</value>
                <value>id</value>
                <value>name</value>
                <value>age</value>
                <value>score</value>
            </list>
        </property>
    </bean>

    <bean id="goodsTokenizer" class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
        <property name="columns" value="6-13,14-17,18-22,23-32,33-" />
        <property name="names" value="isin,quantity,price,customer,buyDay" />
    </bean>

    <bean id="studentFieldSetMapper" class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
        <property name="prototypeBeanName" value="student" />
        <property name="distanceLimit" value="100" />
    </bean>

    <bean id="goodsFieldSetMapper" class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
        <property name="prototypeBeanName" value="goods" />
    </bean>

    <!--############################################################################################################-->

    <bean id="multiTypesItemWriter" class="com.xing.springbatch.multi.MultiItemWriter">
        <property name="delegates">
            <list>
                <ref bean="studentWriter" />
                <ref bean="goodsWriter" />
            </list>
        </property>
    </bean>

    <!-- 学生信息的写 -->
    <bean id="studentWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="classpath:#{jobParameters['outputFilePathStudent']}" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="id,name,age,score" />
                    </bean>
                </property>
                <property name="format" value="%-9s%-9s%3d%-2.0f" />
            </bean>
        </property>
    </bean>

    <!-- 商品信息的写 -->
    <bean id="goodsWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="classpath:#{jobParameters['outputFilePathGoods']}" />
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="isin,quantity,price,customer,buyDay" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
</beans>